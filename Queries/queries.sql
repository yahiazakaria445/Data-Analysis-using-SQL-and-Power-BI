--1
SELECT 
    c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID,
    COUNT(*) AS NumberOfOrders
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMCUSTOMER c ON f.CUSTOMERID = c.CUSTOMER_UNIQUE_ID
GROUP BY c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID
ORDER BY NumberOfOrders DESC
LIMIT 10;

--2
SELECT 
    AVG(f.TOTALAMOUNT) AS AvgSpendPerOrder
FROM SALES.PUBLIC.FACT f;

--3
SELECT 
    c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID,
    AVG(f.TOTALAMOUNT) AS AvgSpendPerCustomer
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMCUSTOMER c ON f.CUSTOMERID = c.CUSTOMER_UNIQUE_ID
GROUP BY c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID
ORDER BY AvgSpendPerCustomer DESC
LIMIT 10;

--4
SELECT 
    c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMCUSTOMER c ON f.CUSTOMERID = c.CUSTOMER_UNIQUE_ID
GROUP BY c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID
HAVING COUNT(*) = 1;

--5
SELECT 
    c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID,
    COUNT(*) AS RepeatPurchases
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMCUSTOMER c ON f.CUSTOMERID = c.CUSTOMER_UNIQUE_ID
GROUP BY c.FIRSTNAME, c.LASTNAME, c.CUSTOMER_UNIQUE_ID
ORDER BY RepeatPurchases DESC
LIMIT 10;

--6
SELECT 
    p.PRODUCTNAME,
    SUM(f.QUANTITYORDERDED) AS TotalQuantitySold
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
GROUP BY p.PRODUCTNAME
ORDER BY TotalQuantitySold DESC
LIMIT 10;

--7
SELECT 
    p.PRODUCTNAME,
    SUM(f.QUANTITYORDERDED) AS TotalQuantitySold
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
GROUP BY p.PRODUCTNAME
ORDER BY TotalQuantitySold ASC
LIMIT 10;

--8
SELECT 
    p.CATEGORY,
    SUM(f.QUANTITYORDERDED) AS TotalQuantitySold
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
GROUP BY p.CATEGORY
ORDER BY TotalQuantitySold DESC;

--9
SELECT 
    p.PRODUCTNAME,
    SUM(f.QUANTITYORDERDED) AS TOTAL_SOLD
FROM 
    SALES.PUBLIC.FACT f
JOIN 
    SALES.PUBLIC.DIMPRODUCTDATA p
    ON f.PRODUCTID = p.PRODUCTNAME
GROUP BY 
    p.PRODUCTNAME
ORDER BY 
    TOTAL_SOLD ASC
LIMIT 10;

--10
SELECT 
    p.CATEGORY,
    SUM(f.TOTALAMOUNT) AS Revenue
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
GROUP BY p.CATEGORY
ORDER BY Revenue DESC;

--11
SELECT 
    s.STORENAME,
    SUM(f.TOTALAMOUNT) AS TotalRevenue
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMSTORE s ON f.STOREID = s.STOREID
GROUP BY s.STORENAME
ORDER BY TotalRevenue DESC
LIMIT 1;

--12
SELECT 
    s.STORENAME,
    AVG(f.TOTALAMOUNT) AS AvgTransactionValue
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMSTORE s ON f.STOREID = s.STOREID
GROUP BY s.STORENAME;

--13
SELECT 
    s.REGION,
    SUM(f.TOTALAMOUNT) AS Revenue
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMSTORE s ON f.STOREID = s.STOREID
GROUP BY s.REGION
ORDER BY Revenue DESC;

--14
SELECT 
    s.REGION,
    SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) AS Profit,
    SUM(f.TOTALAMOUNT) AS Revenue,
    (SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) / SUM(f.TOTALAMOUNT)) * 100 AS ProfitMarginPercent
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMSTORE s ON f.STOREID = s.STOREID
GROUP BY s.REGION
ORDER BY ProfitMarginPercent DESC;

--15
SELECT 
    d.YEAR,
    d.MONTH,
    SUM(f.TOTALAMOUNT) AS MonthlyRevenue
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
WHERE d.YEAR = EXTRACT(YEAR FROM CURRENT_DATE) - 1
GROUP BY d.YEAR, d.MONTH
ORDER BY d.YEAR, d.MONTH;

--16
WITH yearly_revenue AS (
    SELECT d.YEAR, SUM(f.TOTALAMOUNT) AS Revenue
    FROM SALES.PUBLIC.FACT f
    JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
    GROUP BY d.YEAR
)
SELECT 
    curr.YEAR,
    curr.Revenue,
    prev.Revenue AS PrevYearRevenue,
    ((curr.Revenue - prev.Revenue) / prev.Revenue) * 100 AS YoYGrowthPercent
FROM yearly_revenue curr
JOIN yearly_revenue prev ON curr.YEAR = prev.YEAR + 1
ORDER BY curr.YEAR;

--17
SELECT 
    f.ORDER_HOUR,
    SUM(f.TOTALAMOUNT) AS TOTAL_REVENUE
FROM 
    SALES.PUBLIC.FACT f
GROUP BY 
    f.ORDER_HOUR
ORDER BY 
    f.ORDER_HOUR;

--18
SELECT 
    p.PRODUCTNAME,
    SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) AS Profit,
    SUM(f.TOTALAMOUNT) AS Revenue,
    (SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) / SUM(f.TOTALAMOUNT)) * 100 AS ProfitMarginPercent
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
GROUP BY p.PRODUCTNAME
ORDER BY ProfitMarginPercent DESC;

--19
SELECT 
    p.CATEGORY,
    SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) AS Profit,
    SUM(f.TOTALAMOUNT) AS Revenue,
    (SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) / SUM(f.TOTALAMOUNT)) * 100 AS ProfitMarginPercent
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
GROUP BY p.CATEGORY
ORDER BY ProfitMarginPercent DESC;

--20
SELECT 
    FLOOR(DATEDIFF(year, c.DATEOFBIRTH, CURRENT_DATE) / 10) * 10 AS AgeGroup,
    COUNT(*) AS NumberOfOrders,
    SUM(f.TOTALAMOUNT) AS TotalSpent
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMCUSTOMER c ON f.CUSTOMERID = c.CUSTOMER_UNIQUE_ID
GROUP BY AgeGroup
ORDER BY AgeGroup;

--21
SELECT 
    d.YEAR,
    SUM(f.TOTALAMOUNT) AS Revenue
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
GROUP BY d.YEAR
ORDER BY d.YEAR;

--22
SELECT 
    d.HOUR,
    SUM(f.TOTALAMOUNT) AS TotalSales
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
GROUP BY d.HOUR
ORDER BY TotalSales DESC
LIMIT 1;

--23
SELECT 
    s.STORENAME,
    COUNT(*) / COUNT(DISTINCT d.DATE) AS AvgTransactionsPerDay
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMSTORE s ON f.STOREID = s.STOREID
JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
GROUP BY s.STORENAME
ORDER BY AvgTransactionsPerDay DESC
LIMIT 1;

--24
SELECT 
    SUM(f.DISCOUNTAMOUNT) AS TotalDiscountLastQuarter
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
WHERE d.QUARTER = EXTRACT(QUARTER FROM CURRENT_DATE) - 1
  AND d.YEAR = EXTRACT(YEAR FROM CURRENT_DATE);

--25
SELECT 
    p.PRODUCTNAME,
    COUNT(*) AS RETURN_COUNT
FROM 
    SALES.PUBLIC.FACT f
JOIN 
    SALES.PUBLIC.DIMPRODUCTDATA p
    ON f.PRODUCTID = p.PRODUCTNAME
WHERE 
    f.QUANTITYORDERDED < 0
GROUP BY 
    p.PRODUCTNAME
ORDER BY 
    RETURN_COUNT DESC
LIMIT 1;

--26
SELECT 
    CASE WHEN d.ISWEEKEND THEN 'Weekend' ELSE 'Weekday' END AS DayType,
    SUM(f.TOTALAMOUNT) AS Revenue
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
GROUP BY DayType;

--27
WITH RegionalSales AS (
    SELECT
        s.REGION,
        p.PRODUCTNAME,
        SUM(f.QUANTITYORDERDED) AS TotalQuantity
    FROM SALES.PUBLIC.FACT f
    JOIN SALES.PUBLIC.DIMSTORE s ON f.STOREID = s.STOREID
    JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
    GROUP BY s.REGION, p.PRODUCTNAME
)
SELECT REGION, PRODUCTNAME, TotalQuantity
FROM (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY TotalQuantity DESC) AS rn
    FROM RegionalSales
) WHERE rn = 1;

--28
SELECT 
    d.LOYALTYPROGRAMID,
    SUM(f.TOTALAMOUNT) AS TOTAL_REVENUE
FROM 
    SALES.PUBLIC.FACT f
JOIN 
    SALES.PUBLIC.DIMCUSTOMER d ON f.CUSTOMERID = d.CUSTOMER_UNIQUE_ID
GROUP BY 
    d.LOYALTYPROGRAMID
ORDER BY 
    TOTAL_REVENUE DESC;

--29
SELECT 
    p.CATEGORY,
    SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) AS Profit,
    SUM(f.TOTALAMOUNT) AS Revenue,
    CASE WHEN SUM(f.TOTALAMOUNT) = 0 THEN 0 
         ELSE SUM(f.TOTALAMOUNT - f.SHIPPINGCOST - f.DISCOUNTAMOUNT) / SUM(f.TOTALAMOUNT) 
    END AS ProfitToRevenueRatio
FROM SALES.PUBLIC.FACT f
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON f.PRODUCTID = p.PRODUCTID
GROUP BY p.CATEGORY;

--30
WITH SalesByYear AS (
    SELECT 
        f.PRODUCTID,d.YEAR,SUM(f.QUANTITYORDERDED) AS total_sales
    FROM SALES.PUBLIC.FACT f
    JOIN SALES.PUBLIC.DIMDATE d ON f.DATEID = d.DATEID
    GROUP BY f.PRODUCTID, d.YEAR
),
SalesGrowth AS (
    SELECT 
        curr.PRODUCTID,curr.total_sales,prev.total_sales AS prev_sales,
        ((curr.total_sales - prev.total_sales) / NULLIF(prev.total_sales, 0)) * 100 AS growth_percent
    FROM SalesByYear curr
    JOIN SalesByYear prev 
        ON curr.PRODUCTID = prev.PRODUCTID AND curr.YEAR = prev.YEAR + 1
)
SELECT 
    p.PRODUCTNAME, sg.growth_percent
FROM SalesGrowth sg
JOIN SALES.PUBLIC.DIMPRODUCTDATA p ON sg.PRODUCTID = p.PRODUCTID
ORDER BY sg.growth_percent DESC
LIMIT 1;
